function [fitresult, gof] = FitLearningCurve(x, y, AlgorithmVal)
%CREATEFIT(TEMP,THERMEX)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : temp
%      Y Output: thermex
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 01-Feb-2015 14:58:46


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
if AlgorithmVal == 1
    ft = fittype( 'power2' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
    opts.Display = 'Off';
    opts.StartPoint = [0.000442857389474377 2.00561567967462 -56.7766252230489];
elseif AlgorithmVal == 2    % Stanford-B
    ft = fittype( 'a*(x+b)^c', 'independent', 'x', 'dependent', 'y' );
    opts = fitoptions( ft );
    opts.Display = 'Off';
    opts.Lower = [-Inf -Inf -Inf];
    opts.StartPoint = [0.380445846975357 0.567821640725221 0.0758542895630636];
    opts.Upper = [Inf Inf Inf];
else    % Rational
    ft = fittype( 'rat11' );
    opts = fitoptions( ft );
    opts.Display = 'Off';
    opts.Lower = [-Inf -Inf -Inf];
    opts.StartPoint = [0.126986816293506 0.913375856139019 0.63235924622541];
    opts.Upper = [Inf Inf Inf];
end

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult, xData, yData );
% legend( h, 'thermex vs. temp', 'untitled fit 1', 'Location', 'NorthEast' );
% % Label axes
% xlabel( 'temp' );
% ylabel( 'thermex' );
% grid on


